{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar rad2degf = require( '@stdlib/math-base-special-rad2degf' );\nvar acotf = require( '@stdlib/math-base-special-acotf' );\nvar float64ToFloat32 = require( '@stdlib/number-float64-base-to-float32' );\n\n\n// MAIN //\n\n/**\n* Computes the arccotangent (in degrees) of a single-precision floating-point number.\n*\n* @param {number} x - input value\n* @returns {number} arccotangent (in degrees)\n*\n* @example\n* var v = acotdf( 0.0 );\n* // returns 90.0\n*\n* @example\n* var sqrtf = require( '@stdlib/math-base-special-sqrtf' );\n*\n* var v = acotdf( sqrtf( 3.0 ) );\n* // returns ~30.0\n*\n* @example\n* var v = acotdf( 1.0 );\n* // returns 45.0\n*\n* @example\n* var sqrtf = require( '@stdlib/math-base-special-sqrtf' );\n*\n* var v = acotdf( sqrtf( 3.0 ) / 3.0 );\n* // returns ~60.0\n*\n* @example\n* var v = acotdf( NaN );\n* // returns NaN\n*/\nfunction acotdf( x ) {\n\treturn rad2degf( acotf( float64ToFloat32( x ) ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = acotdf;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the arccotangent (in degrees) of a single-precision floating-point number.\n*\n* @module @stdlib/math-base-special-acotdf\n*\n* @example\n* var sqrtf = require( '@stdlib/math-base-special-sqrtf' );\n* var acotdf = require( '@stdlib/math-base-special-acotdf' );\n*\n* var v = acotdf( 0.0 );\n* // returns 90.0\n*\n* v = acotdf( sqrtf( 3.0 ) );\n* // returns ~30.0\n*\n* v = acotdf( 1.0 );\n* // returns 45.0\n*\n* v = acotdf( sqrtf( 3.0 ) / 3.0 );\n* // returns ~60.0\n*\n* v = acotdf( NaN );\n* // returns NaN\n*/\n\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAW,QAAS,oCAAqC,EACzDC,EAAQ,QAAS,iCAAkC,EACnDC,EAAmB,QAAS,wCAAyC,EAmCzE,SAASC,EAAQC,EAAI,CACpB,OAAOJ,EAAUC,EAAOC,EAAkBE,CAAE,CAAE,CAAE,CACjD,CAKAL,EAAO,QAAUI,IClBjB,IAAIE,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "rad2degf", "acotf", "float64ToFloat32", "acotdf", "x", "main"]
}
